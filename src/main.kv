#: import sm1 kivy.uix.screenmanager
<Widget>:
    font_name: 'ukai.ttc'

<Program>:
    orientation: 'vertical'
    id: main_layout
    canvas:
        Color:
            rgba: 0.3, 0.3, 0.3, 1
        Rectangle:
            size: self.size
            pos: self.pos
    Label:
        id: title_bar
        size_hint: (1, 0.05)
        font_size: 20
        text: 'Dictionary'
        halign: 'center'
    SearchBox:
        id: search_term
        font_size: 60             # 80 *************** changed to fit text
        multiline: False
        size_hint_x: 1
        size_hint_y: None
        height: dp(90)
        padding: dp(8)
        spacing: dp(16)
        padding: 5 # [20,30,20,50] *************** Changed to fit text ***********
        hint_text: 'Search phrase'
        foreground_color: [0,0,0,1]
        cursor_color: search_term.foreground_color
#        on_touch_up: app.root.ids.sm.current = 'SearchList'
#        on_text:
#            self.text_process()

    ScreenManager:
        id: sm
        size_hint_y: 0.8
        size_hint_x: 1
        transition: sm1.SlideTransition()



# <BackgroundColor@Widget>
#     background_color: 1, 1, 1, 1
#     canvas.before:
#         Color:
#             rgba: root.background_color
#         Rectangle:
#             size: self.size
#             pos: self.pos
# <BackgroundLabel@Label+BackgroundColor>
#     background_color: 0, 0, 0, 0



<Word>:
    font_name: 'PingFang.ttc'
    canvas.before:
#        Color:
#            rgba: (.0, 0.9, .1, .3) if self.selected else (1, 1, 1, 0.4)
#        Rectangle:
#            size: self.size
#            pos: self.pos
    simplified: ''
    pinyin: ''
    definition: ''
    ToggleButton:
#        canvas.before:
#            Color:
#                rgba: (.0, 0.9, .1, .3) if root.selected else (1, 1, 1, 0.4)
#            Rectangle:
#                size: self.size
#                pos: self.pos
        text: root.simplified
        color: 1,1,1,1
        size_hint_x: 0.15
        size_hint_y: 1
        bold: True
        halign: 'left'
        valign: 'middle'
        font_size: 40
        group: 'words'
        state: root.parent.parent.states[root.idx]  if root.parent else 'normal'
        on_release:
            print(root.parent.parent.states)
            s = self.state
            print(s)
            print(root.idx)
            root.parent.parent.clear_states()
            print(root.parent.parent.states)
            print(app.root.ids.sm.get_screen('WordScreen').children[0])
            print(app.root.ids.sm.get_screen('WordScreen').children[0].index)
            app.root.ids.sm.get_screen('WordScreen').children[0].index = root.idx
            if s == 'down': root.update_information()
            if s == 'down': root.parent.parent.states[root.idx] = 'down'
            print(f"{root.idx} {self.state}")
            print(root.parent.parent.states)
    Label:
        text: root.definition
        text_size: cm(6), cm(4)
        shorten: True
        split_str: ';'
        bold: True
        color: 1,1,1,1
        size_hint_x: 0.25
        size_hint_y: 1
        bold: True
        halign: 'left'
        valign: 'middle'
        font_size: 40      
    

            

<SearchList>:
    id: rv
    scroll_type: ['bars', 'content']
    scroll_wheel_distance: dp(114)
    bar_width: dp(10)
    viewclass: 'Word'
    data: root.rv_data
    RecycleBoxLayout:
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'
        spacing: dp(5)
        # multiselect: False
        # touch_multiselect: False



<InfoLabel>:
    markup: True
    text_size: self.width, None
    # size: self.texture_size
    color: (0, 0, 0, 1)
    size_hint_y: 1
    text: ''
    halign: 'left'
    valign: 'top'
    font_size: 50    
    padding_x: dp(20)


<WordScreen>:
    orientation: 'vertical'
    id: word_screen
    BoxLayout:
        size_hint_x: 1
        size_hint_y: None
        height: dp(60)
        orientation: 'horizontal'
        Button:
            id: back_button
            halign: 'center'
            valign: 'middle'
            text: 'Back'
            size_hint_x: (0.10, 1)
            on_press: 
                app.root.ids.sm.transition.direction='right'
                app.root.ids.sm.current = 'SearchList'
        PrevNextButton:
            id: prev_word
            halign: 'center'
            valign: 'middle'
            text: 'Previous Word'
            size_hint: (0.35, 1)
            on_press:
                self.go_back()         
        PrevNextButton:
            id: next_word
            halign: 'center'
            valign: 'middle'
            text: 'Next Word'
            size_hint: (0.35, 1)
            on_press:
                self.go_forward()
        Button:
            id: other_button
            halign: 'left'
            valign: 'middle'
            text: 'Other'
            size_hint: (0.20, 1)
            on_press: print("Not implemented yet.")
    BoxLayout:
        canvas.before:
            Color:
                rgba: (1, 1, 1, 1) 
            Rectangle:
                size: self.size
                pos: self.pos
        orientation: 'horizontal'
        ScrollView:
            do_scroll_y: True
            BoxLayout:
                orientation: 'vertical'
                InfoLabel:
                    id: word_title
                    size: self.texture_size
                    size_hint_y: 0.2
                    bold: True
                    padding_y: dp(40)
                InfoLabel:
                    id: word_body
                    size_hint_y: 0.8
                    valign: 'top'
                    text: 'Definitions:'
                    # padding_y: dp(70)
                    bold: True